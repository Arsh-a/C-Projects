//Pacman game using c
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
//defining clear buffer and remove next line functions
void FlushBuffer()
{
    char c;
    while((c=getchar())!='\n' && c!=EOF);
}
void RemoveNextLine(char* str)
{
    size_t len= strlen(str);
    if(len>0 && str[len-1]=='\n')
    {
        str[len-1]='\0';
    }
}
//declaring a global variable to know if the game is over
int gameOver=0, score=0,  flag=0, endGame=0;
//structure to store the food positions
struct foodPosition{
    int foodPosition_x;
    int foodPosition_y;
    int capture;
};

//structure to store the demon positions
struct demonPosition{
    int demonPosition_x;
    int demonPosition_y;
};
//structure to store the positions of pacman 
struct pacman{
    int pacmanPosition_x;
    int pacmanPosition_y;
};
//function to calculate the food positions of 100 food
void calculateFoodPosition(struct foodPosition fp[])
{
    for(int i=0;i<100;i++)
    {
        fp[i].foodPosition_y=rand()%20;
        fp[i].foodPosition_x=rand()%50;
        
    }
}

//function to calculate the demon positions of 10 demons
void calculateDemonPosition(struct demonPosition dp[])
{
    for(int i=0;i<10;i++)
    {
        dp[i].demonPosition_y=rand()%20;
        dp[i].demonPosition_x=rand()%50;
        
    }
}
//function to print the board. now, it just prints the border and walls
void printBoard(struct foodPosition fp[],struct pacman* p, struct demonPosition dp[])
{
    system("clear");
    for(int i=0;i<20;i++)
    {
        
        for(int j=0;j<50;j++)
        {
            if(i==0 || j==0 || i==19||j==49)
            {
                printf("#");
            }
            
            else if(i==3&& j>=5 &&j<39 || i==5&& j>=5 &&j<39 ||i==8&& j>=5 &&j<39 ||i==17&& j>=5 &&j<39 ||i==15 && j>=5  &&j<39)
            {
                printf("#");
            }
            else if(i==p->pacmanPosition_y && j==p->pacmanPosition_x)
            {
                printf("C");
            }
            else 
            {
                int foundfood=0;
                for(int k=0;k<100;k++)
                {
                    
                    // if(p->pacmanPosition_x==fp[k].foodPosition_x && p->pacmanPosition_y==fp[k].foodPosition_y)
                    // {
                    //     //printf("C");
                    //     //score++;
                    //     fp[k].capture=1;
                    //   //break;
                    // }
                     if(i==fp[k].foodPosition_y && j==fp[k].foodPosition_x && fp[k].capture!=1)
                    {
                       printf(".");
                    foundfood=1;
                    break;   
                    }
                }
                if(foundfood==0)
                {
                    int foundDemon=0;
                    for(int k=0;k<10;k++)
                    {
                        if(i==dp[k].demonPosition_y && j==dp[k].demonPosition_x)
                        {
                            if(flag==1)
                            {
                                gameOver++;
                            }
                            // if(p->pacmanPosition_x==dp[k].demonPosition_x && p->pacmanPosition_y==dp[k].demonPosition_y)
                            // {
                            //     printf("\nYou met the demon\n");
                            //     gameOver=1;
                            //     foundDemon=1;
                        
                            // }
                            
                            else{
                            
                                printf("D");
                            foundDemon=1;
                            break;
                            }
                            
                        }
                    }
                    
                    if(foundDemon==0)
                    {
                        printf(" ");
                    }
                }
                // if(i==fp[count].foodPosition_y && j==fp[count].foodPosition_x)
                // {
                //     printf(".");
                //     count++;
                // }
                // else
                // {
                //     printf(" ");
                // }
            }
            // else
            // {
            //     printf(" ");
            // }
        
        }
        printf("\n");
    }
    // printf("Pacman position : %d %d",p->pacmanPosition_x,p->pacmanPosition_y);
    // printf("Demon position : %d %d",dp[l].demonPosition_x,dp[l].demonPosition_y);
    // if(dp[l].demonPosition_x==p->pacmanPosition_x && dp[l].demonPosition_y==p->pacmanPosition_y)
    // {
    //     gameOver++;
    // }
    //   if(gameOver)
    // {
    //     printf("\nGame Over! You collided with a demon.\n");
    //     printf("Final Score: %d\n", score);
    // }
}

//function to get the user input and change the position of pacman with user input
int pacmanPosition(struct pacman* p, struct demonPosition dp[], struct foodPosition fp[])
{
   
        //char variable to store the user option 
        char position;
          // FlushBuffer();
        printf("Press key : ");
        scanf(" %c",&position);  
        //RemoveNextLine(position);
        
        
        switch(position){
            case 'a':
            p->pacmanPosition_x--;
            break;
            
            case 'w':
            p->pacmanPosition_y--;
            break;
            
            case 's':
            p->pacmanPosition_y++;
            break;
            
            case 'd':
            p->pacmanPosition_x++;
            break;
            
            case 'x':
            endGame++;
        
        }
        if(p->pacmanPosition_y>=20 || p->pacmanPosition_x>=50 ||p->pacmanPosition_x<=0|| p->pacmanPosition_y<=0)
        {
            gameOver++;
        }
        
        for(int k=0;k<10;k++)
        {
            if(dp[k].demonPosition_x==p->pacmanPosition_x && dp[k].demonPosition_y==p->pacmanPosition_y)
    {
        flag=1;
        return 0;
    }
        }
        
        for(int k=0;k<100;k++)
        {
            if(fp[k].foodPosition_x==p->pacmanPosition_x && fp[k].foodPosition_y==p->pacmanPosition_y)
    {
        score++;
        fp[k].capture=1;
    }
        }
}

// void logic(struct foodPosition fp[], struct pacman p, struct demonPosition dp[]){
//     if(pacmanPosition_y==foodPosition_y && pacmanPosition_x==foodPosition_x)
//     {
//         score++;
//     }
    
//     else if(pacmanPosition_y==demonPosition_y && pacmanPosition_x==demonPosition_x)
//     {
//         gameOver++;
//     }
// }
int main(){
    
    //intializing struct for foodPosition to store position details of 100 food
    struct foodPosition fp[100];
    //intializing struct for foodPosition to store position details of 100 food
    struct demonPosition dp[10];
    //intializing struct for packmanPosition to store his position details
    struct pacman p ;
    p.pacmanPosition_y=18;
    p.pacmanPosition_x=2;
    calculateFoodPosition(fp);
    calculateDemonPosition(dp);
         
    while(!gameOver&&endGame!=1)
    {
        // printf("\nEnter x to exit\n");
        printBoard(fp,&p,dp);
        printf("%d\n",score);
        if(!gameOver)
        {
             pacmanPosition(&p,dp,fp);
             
        }
       
    }
    if(gameOver==1)
    {
        printf("\nGAME OVER your score is : %d",score);
    }
    else if(endGame==1)
    {
        printf("\nGame closed successfully\nYour score is : %d",score);
    }
}
